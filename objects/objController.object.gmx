<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Init
randomize()
global.card = noone;
global.turn = 2
decktest = ds_stack_create()
deck1 = choose(0,1,2) //0 = water deck, 1 = fire deck, 2 = earth deck
if deck1 = 0 { //Rising Tides Structure Deck
for(i=0;i&lt;14;i++) {
 if i = 0 or i = 1 or i = 2 {
    ds_stack_push(decktest,3) //irandom_range(3,17)
    ds_stack_push(decktest,3) //irandom_range(3,17)
 }
 if i = 3 or i = 4 or i = 5 {
    ds_stack_push(decktest,6) //irandom_range(3,17)
    ds_stack_push(decktest,6) //irandom_range(3,17)
 }
 if i = 6 or i = 7 or i = 8 {
    ds_stack_push(decktest,11) //irandom_range(3,17)
    ds_stack_push(decktest,11)
 }
 if i = 9 or i = 10 or i = 11 {
    ds_stack_push(decktest,13) //irandom_range(3,17)
    ds_stack_push(decktest,13)
 }
 if i = 12 or i = 13 or i = 14 {
    ds_stack_push(decktest,16) //irandom_range(3,17)
    ds_stack_push(decktest,16)
 }

}
}
if deck1 = 1 { //Raging Flames Structure Deck
for(i=0;i&lt;14;i++) {
 if i = 0 or i = 1 or i = 2 {
    ds_stack_push(decktest,4) //irandom_range(3,17)
    ds_stack_push(decktest,4) //irandom_range(3,17)
 }
 if i = 3 or i = 4 or i = 5 {
    ds_stack_push(decktest,7) //irandom_range(3,17)
    ds_stack_push(decktest,7) //irandom_range(3,17)
 }
 if i = 6 or i = 7 or i = 8 {
    ds_stack_push(decktest,9) //irandom_range(3,17)
    ds_stack_push(decktest,9)
 }
 if i = 9 or i = 10 or i = 11 {
    ds_stack_push(decktest,12) //irandom_range(3,17)
    ds_stack_push(decktest,12)
 }
 if i = 12 or i = 13 or i = 14 {
    ds_stack_push(decktest,17) //irandom_range(3,17)
    ds_stack_push(decktest,17)
 }

}
}
if deck1 = 2 { //Unbreaking Grounds Structure Deck
for(i=0;i&lt;14;i++) {
 if i = 0 or i = 1 or i = 2 {
    ds_stack_push(decktest,5) //irandom_range(3,17)
    ds_stack_push(decktest,5) //irandom_range(3,17)
 }
 if i = 3 or i = 4 or i = 5 {
    ds_stack_push(decktest,8) //irandom_range(3,17)
    ds_stack_push(decktest,8) //irandom_range(3,17)
 }
 if i = 6 or i = 7 or i = 8 {
    ds_stack_push(decktest,10) //irandom_range(3,17)
    ds_stack_push(decktest,10)
 }
 if i = 9 or i = 10 or i = 11 {
    ds_stack_push(decktest,14) //irandom_range(3,17)
    ds_stack_push(decktest,14)
 }
 if i = 12 or i = 13 or i = 14 {
    ds_stack_push(decktest,15) //irandom_range(3,17)
    ds_stack_push(decktest,15)
 }

}
}

var str;
ini_open("deck.ini");
str = ds_stack_write(decktest);
ini_write_string("deck", "0", str);
ds_stack_clear(decktest);
ini_close();
audio_play_sound(mus_pillarsOfCreationSlowTheme,9,100)
audio_sound_gain(mus_pillarsOfCreationSlowTheme, 0.1, 0);
global.placing = false
turnT = choose(0,1)
alarm[0] = 120
turncount = 0
turntime = 60*60

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if turntime &lt; 0 {
    with instance_find(objDeck,global.turn) {
         hp -= 1
    }
    alarm[2] = 60
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.turn = turnT
alarm[1] = 45
turntime = 60*60
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Move card
if (global.card != noone) {
   with (global.card) {
        x = mouse_x
        y = mouse_y
   }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Card Turn
randomize()
if alarm[0] &gt; 0 {
   turnT = choose(0,1)
}
turntime -= 1
if turntime = 0 {
   alarm[2] = 60
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if global.turn = 1 {
   draw_text(4,4,"Blues turn ["+string(turncount)+"]")
}
if global.turn = 0 {
   draw_text(4,4,"Reds turn ["+string(turncount)+"]")
}
if global.turn = 2 {
   draw_text(4,4,"Deciding who to start")
}
if global.placing = true {
   draw_sprite_ext(sprCard,objInvokation.cardStatI,mouse_x,mouse_y,1,1,0,c_white,0.5)
}
if alarm[0] &gt; 0 {
   draw_sprite(sprCoin,turnT,x+10,y+20)
} 
if alarm[1] &gt; 0 {
   draw_sprite(sprCoin,global.turn,x+10,y+20)
}
draw_sprite_ext(sprTimer,0,182,177,turntime/(60*60),1,0,c_white,1)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="82">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>game_restart()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="32">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (global.turn != 2) {
    if (global.turn = 1) and global.card = noone and objInvokation.casting = noone and global.placing = false {
       global.turn = 0
       turncount += 1
       turntime = 60*60
       pile = instance_find(objDeck,0)
       pile.drawcount += 1
       with (pile) {
            if ds_stack_empty(deck) = true {
               hp -= 1
            }
       }
       audio_play_sound(snd_turnChange,10,false)
       objElements.drawcount = 2
       objInvokation.reminvoke = 2
       with (objFieldSpot) {
           if taken = true {
                if attack = true {
                   attack = false
                }
                if y &gt; room_height/2 {
                   attack = true
                }
           }
       }
    } else if global.card = noone and objInvokation.casting = noone and global.placing = false{
      global.turn = 1
      turncount += 1
      turntime = 60*60
      pile = instance_find(objDeck,1)
      pile.drawcount += 1
      with (pile) {
            if ds_stack_empty(deck) = true {
               hp -= 1
            }
       }

      audio_play_sound(snd_turnChange,10,false)
      objElements.drawcount = 2
      objInvokation.reminvoke = 2
       with (objFieldSpot) {
            if taken = true {
                if attack = true {
                   attack = false
                }
                if y &lt; room_height/2 {
                   attack = true
                }
           }
       }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
