<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Init
randomize()
global.card = noone;
global.turn = 0
decktest = ds_stack_create()
for(i=0;i&lt;30;i++) {
 ds_stack_push(decktest,irandom_range(3,11))
}
var str;
ini_open("deck.ini");
str = ds_stack_write(decktest);
ini_write_string("deck", "0", str);
ds_stack_clear(decktest);
ini_close();
audio_play_sound(mus_pillarsOfCreationSlowTheme,9,100)
audio_sound_gain(mus_pillarsOfCreationSlowTheme, 0.1, 0);
global.handMiss = 1
global.placing = false
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Move card
if (global.card != noone) {
   with (global.card) {
        x = mouse_x
        y = mouse_y
   }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_text(4,4,"Player: " + string(global.turn + 1))
if global.placing = true {
   draw_sprite_ext(sprCard,objInvokation.cardStatI,mouse_x,mouse_y,1,1,0,c_white,0.5)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="32">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (global.turn = 1) and global.card = noone and objInvokation.casting = noone and global.placing = false {
   global.turn = 0
   pile = instance_find(objDeck,0)
   pile.drawcount += 1
   audio_play_sound(snd_turnChange,10,false)
   objElements.drawcount = 2
   objInvokation.reminvoke = 2
   with (objFieldSpot) {
       if taken = true {
            if attack = true {
               attack = false
            }
            if y &gt; room_height/2 {
               attack = true
            }
       }
   }
} else if global.card = noone and objInvokation.casting = noone and global.placing = false{
  global.turn = 1
  pile = instance_find(objDeck,1)
  pile.drawcount += 1
  audio_play_sound(snd_turnChange,10,false)
  objElements.drawcount = 2
  objInvokation.reminvoke = 2
   with (objFieldSpot) {
        if taken = true {
            if attack = true {
               attack = false
            }
            if y &lt; room_height/2 {
               attack = true
            }
       }
   }
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
